@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model LinkStorage.ViewModels.ProfileViewModel
@{
    
    ViewData["Title"] =  "Profile ";
    Layout = "_Layout";
}
<div>
    <div>
        <h1> @Model.User.UserName </h1>
        <p> Post : @Model.User.PublicPostCount</p>
        <p> Followers : @Model.User.FollowersCount</p>
        <p>Following : @Model.User.FollowingsCount</p>
        <hr/>
        
        @if (User.Identity.IsAuthenticated)
        {
            if (Model.User.Id != UserManager.GetUserId(User))
            {



                if (Model.IsFollowing)
                {
                    <form method="get">
                        <button> <a asp-controller="Follows" asp-action="UnFollow" asp-route-id="@Model.User.Id">unfollow</a> </button>
                    </form>
                }
                else
                {
                    <form method="get">
                        <button> <a asp-controller="Follows" asp-action="FollowUser" asp-route-id="@Model.User.Id">Follow</a> </button>
                    </form>

                }
                
                <br/>
                <hr/>
            }

           
        }
        
        
        
    </div>
    <div>
        <h4> All the public post by </h4>
        <hr/>
        @foreach (var lnk in Model.links)
        {
            <h3>@lnk.User.UserName</h3>
            <h6>@lnk.Site</h6>
            <div style="width: 40%; ">@Html.Raw(@lnk.RawHtml)</div> 
            <br/>
            <br/>
            <hr/>
        }
        
    </div>



</div>

    
    

